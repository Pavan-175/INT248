import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#########importing classification models######

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier # KNN algorithm
from sklearn.linear_model import LogisticRegression # Logistic regression algorithm

##########importing evaluation metrics######

from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

df = pd.read_csv('/kaggle/input/creditcardfraud/creditcard.csv')
df.drop('Time', axis = 1, inplace = True)
print(df.head())

############data normalisation############

sc = StandardScaler()
amount = df['Amount'].values

df['Amount'] = sc.fit_transform(amount.reshape(-1, 1))

###########data splitting############

x = df.drop('Class', axis = 1).values
y = df['Class'].values

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)

##########implementing classification model########

n = 5
knn = KNeighborsClassifier(n_neighbors = n)
knn.fit(x_train, y_train)
knn_test = knn.predict(x_test)

#########printing performace metrics of model#########

print(classification_report(y_test,knn_test))
print("Accuracy is : {r:.2f}%".format(r=(accuracy_score(y_test, knn_test)*100)))
