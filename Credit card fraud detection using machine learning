import numpy as np
import pandas as pd

##########importing classification model############
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression


##########importing evaluation metrics######

from sklearn.metrics import classification_report
from sklearn.metrics import accuracy_score

##########importing dataset##########

df = pd.read_csv('C:/Users/pavan/Downloads/creditcard.csv')
print(df.head())
print(df.info())
df.isnull().sum()

############dealing with unbalanced dataset############

df['Class'].value_counts()

non_fraud=df[df.Class==0]
fraud=df[df.Class==1]

non_fraud_sample=non_fraud.sample(n=492)
new_df=pd.concat([non_fraud_sample,fraud],axis=0)

new_df['Class'].value_counts()

###########data splitting############

x = new_df.drop('Class', axis = 1)
y = new_df['Class']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2,random_state = 2)
print(x.shape,x_train.shape,x_test.shape)

##########implementing classification model########

model=LogisticRegression(solver='liblinear')
model.fit(x_train,y_train)
lr_test=model.predict(x_test)

#########Evaluating performance metrics of model#########

print(classification_report(lr_test,y_test))
print("Accuracy is : {r:.2f}%".format(r=(accuracy_score(y_test,lr_test)*100)))
